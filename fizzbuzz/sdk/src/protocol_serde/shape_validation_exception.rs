// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_validation_exception_error(
    value: &crate::error::ValidationException,
) -> ::std::result::Result<
    ::std::vec::Vec<u8>,
    ::aws_smithy_types::error::operation::SerializationError,
> {
    let mut encoder = ::aws_smithy_cbor::Encoder::new(::std::vec::Vec::new());
    {
        let encoder = &mut encoder;
        crate::protocol_serde::shape_validation_exception::ser_validation_exception(
            encoder, value,
        )?;
    }
    ::std::result::Result::Ok(encoder.into_writer())
}

pub fn ser_validation_exception(
    encoder: &mut ::aws_smithy_cbor::Encoder,
    #[allow(unused)] input: &crate::error::ValidationException,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    encoder.begin_map();
    encoder
        .str("__type")
        .str("smithy.framework#ValidationException");
    {
        encoder.str("message").str(input.message.as_str());
    }
    if let Some(var_1) = &input.field_list {
        encoder.str("fieldList");
        encoder.array((*var_1).len());
        for item_2 in var_1 {
            {
                crate::protocol_serde::shape_validation_exception_field::ser_validation_exception_field(encoder, item_2 )?;
            }
        }
    }
    encoder.end();
    Ok(())
}
