// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_internal_exception_error(
    value: &crate::error::InternalException,
) -> ::std::result::Result<
    ::std::vec::Vec<u8>,
    ::aws_smithy_types::error::operation::SerializationError,
> {
    let mut encoder = ::aws_smithy_cbor::Encoder::new(::std::vec::Vec::new());
    {
        let encoder = &mut encoder;
        crate::protocol_serde::shape_internal_exception::ser_internal_exception(encoder, value)?;
    }
    ::std::result::Result::Ok(encoder.into_writer())
}

pub fn ser_internal_exception(
    encoder: &mut ::aws_smithy_cbor::Encoder,
    #[allow(unused)] input: &crate::error::InternalException,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    encoder.begin_map();
    encoder
        .str("__type")
        .str("smithy.example.eventstreaming#InternalException");
    if let Some(var_1) = &input.message {
        encoder.str("message").str(var_1.as_str());
    }
    encoder.end();
    Ok(())
}
