# This file will be used by automation when cutting a release of the SDK
# to include code generator change log entries into the release notes.
# This is an auto-generated file. Do not edit.

{
  "smithy-rs": [],
  "aws-sdk-rust": [
    {
      "message": "re-use checksums on retry attempts for enhanced durability\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "aajtodd",
      "references": [],
      "since-commit": "1378695258e645d2c65a99cc0311b8c3d982e167",
      "age": 5
    },
    {
      "message": "Event streams now allocate a right-sized buffer avoiding repeated reallocations during serialization\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#4212"
      ],
      "since-commit": "a23d116a79e8920c2efa813a8f831541a9943e4f",
      "age": 4
    },
    {
      "message": "Add support for configuring auth schemes manually using an auth scheme preference list.\nThe preference list allows customers to reprioritize the order of auth schemes originally\ndetermined by the auth scheme resolver.\nCustomers can configure the auth scheme preference at the following locations, listed in order of precedence:\n1. Service Client Configuration\n```rust\nuse aws_runtime::auth::sigv4;\nuse aws_smithy_runtime_api::client::auth::AuthSchemeId;\nuse aws_smithy_runtime_api::client::auth::http::HTTP_BEARER_AUTH_SCHEME_ID;\n\nlet config = aws_sdk_s3::Config::builder()\n    .auth_scheme_preference([AuthSchemeId::from(\"scheme1\"), sigv4::SCHEME_ID, HTTP_BEARER_AUTH_SCHEME_ID])\n    // ...\n    .build();\n```\n2. Environment Variable\n```\nAWS_AUTH_SCHEME_PREFERENCE=scheme1, sigv4, httpBearerAuth\n```\n3. Configuration File\n```\nauth_scheme_preference=scheme1, sigv4, httpBearerAuth\n```\nWith this configuration, the auth scheme resolver will prefer to select them in the specified order,\nif they are supported.\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#4203"
      ],
      "since-commit": "6649098171e33e1e65eaacffb12be58e858a4782",
      "age": 3
    },
    {
      "message": "Add fallback equality on no auth `AuthSchemeId` for backward compatibility, treating `AuthSchemeId::from(\"no_auth\")` (legacy) and `AuthSchemeId::from(\"noAuth\")` (updated) as equivalent.\n",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#4232"
      ],
      "since-commit": "a2a7d7aa371ed8d9af191f4220b6c8ddebcb2ce0",
      "age": 1
    }
  ],
  "aws-sdk-model": []
}