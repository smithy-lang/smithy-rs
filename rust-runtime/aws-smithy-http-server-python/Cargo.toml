[package]
name = "aws-smithy-http-server-python"
version = "0.63.3"
authors = ["Smithy Rust Server <smithy-rs-server@amazon.com>"]
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/smithy-lang/smithy-rs"
keywords = ["smithy", "framework", "web", "api", "aws"]
categories = ["asynchronous", "web-programming", "api-bindings"]
description = """
Python server runtime for Smithy Rust Server Framework.
"""
publish = true

[dependencies]
aws-smithy-http = { path = "../aws-smithy-http" }
aws-smithy-http-server = { path = "../aws-smithy-http-server", features = ["aws-lambda"] }
aws-smithy-json = { path = "../aws-smithy-json" }
aws-smithy-types = { path = "../aws-smithy-types", features = ["byte-stream-poll-next", "http-body-0-4-x"] }
aws-smithy-xml = { path = "../aws-smithy-xml" }
bytes = "1.10.0"
futures = "0.3"
http = "0.2.9"
hyper = { version = "0.14.26", features = ["server", "http1", "http2", "tcp", "stream"] }
tls-listener = { version = "0.7.0", features = ["rustls", "hyper-h2"] }
rustls-pemfile = "1.0.1"
tokio-rustls = "0.24.0"
lambda_http = { version = "0.8.3" }
num_cpus = "1.13.1"
parking_lot = "0.12.1"
pin-project-lite = "0.2.14"
pyo3 = "0.18.2"
pyo3-asyncio = { version = "0.18.0", features = ["tokio-runtime"] }
signal-hook = { version = "0.3.14", features = ["extended-siginfo"] }
socket2 = { version = "0.5.5", features = ["all"] }
thiserror = "1.0.40"
tokio = { version = "1.40.0", features = ["full"] }
tokio-stream = "0.1.2"
tower = { version = "0.4.13", features = ["util"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.16", features = ["json", "env-filter"] }
tracing-appender = { version = "0.2.2"}

[dev-dependencies]
pretty_assertions = "1"
futures-util = { version = "0.3.29", default-features = false }
tower-test = "0.4"
tokio-test = "0.4"
pyo3-asyncio = { version = "0.18.0", features = ["testing", "attributes", "tokio-runtime", "unstable-streams"] }
rcgen = "0.10.0"
hyper-rustls = { version = "0.24", features = ["http2"] }

# PyO3 Asyncio tests cannot use Cargo's default testing harness because `asyncio`
# wants to control the main thread. So we need to use testing harness provided by `pyo3_asyncio`
# for the async Python tests. For more detail see:
# https://docs.rs/pyo3-asyncio/0.18.0/pyo3_asyncio/testing/index.html#pyo3-asyncio-testing-utilities
[[test]]
name = "middleware_tests"
path = "src/middleware/pytests/harness.rs"
harness = false
[[test]]
name = "python_tests"
path = "src/pytests/harness.rs"
harness = false

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]
rustdoc-args = ["--cfg", "docsrs"]
# End of docs.rs metadata
